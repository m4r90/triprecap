{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rm200523\\\\OneDrive - Universit\\xE9 C\\xF4te d'Azur\\\\Documents\\\\3annee\\\\triprecapApp\\\\triprecap\\\\App.js\";\nimport 'react-native-gesture-handler';\nimport React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { Ionicons } from '@expo/vector-icons';\nimport { GestureHandlerRootView } from 'react-native-gesture-handler';\nimport HomeScreen from './src/screens/HomeScreen';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CanvasScreen = () => _jsxDEV(View, {\n  style: styles.screen\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 14,\n  columnNumber: 3\n}, this);\nconst ProfileScreen = () => _jsxDEV(View, {\n  style: styles.screen\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 20,\n  columnNumber: 3\n}, this);\nconst SettingsScreen = () => _jsxDEV(View, {\n  style: styles.screen\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 26,\n  columnNumber: 3\n}, this);\nconst Drawer = createDrawerNavigator();\nexport default function App() {\n  return _jsxDEV(GestureHandlerRootView, {\n    style: {\n      flex: 1\n    },\n    children: _jsxDEV(NavigationContainer, {\n      children: _jsxDEV(Drawer.Navigator, {\n        initialRouteName: \"Home\",\n        screenOptions: ({\n          route\n        }) => ({\n          drawerStyle: styles.drawer,\n          drawerType: 'permanent',\n          drawerPosition: 'left',\n          headerShown: false,\n          drawerIcon: ({\n            focused,\n            color\n          }) => {\n            let iconName;\n            if (route.name === 'Home') {\n              iconName = focused ? 'book' : 'book-outline';\n            } else if (route.name === 'Canvas') {\n              iconName = focused ? 'create' : 'create-outline';\n            } else if (route.name === 'Profile') {\n              iconName = focused ? 'person' : 'person-outline';\n            } else if (route.name === 'Settings') {\n              iconName = focused ? 'settings' : 'settings-outline';\n            }\n            return _jsxDEV(Ionicons, {\n              name: iconName,\n              size: 20,\n              color: color\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 22\n            }, this);\n          },\n          drawerItemStyle: styles.drawerItem,\n          drawerContentContainerStyle: styles.drawerContent\n        }),\n        children: [_jsxDEV(Drawer.Screen, {\n          name: \"Home\",\n          component: HomeScreen,\n          options: {\n            drawerLabel: 'Home',\n            drawerLabelStyle: styles.drawerLabel\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), _jsxDEV(Drawer.Screen, {\n          name: \"Canvas\",\n          component: CanvasScreen,\n          options: {\n            drawerLabel: 'Canvas',\n            drawerLabelStyle: styles.drawerLabel\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), _jsxDEV(Drawer.Screen, {\n          name: \"Profile\",\n          component: ProfileScreen,\n          options: {\n            drawerLabel: 'Profile',\n            drawerLabelStyle: styles.drawerLabel\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), _jsxDEV(Drawer.Screen, {\n          name: \"Settings\",\n          component: SettingsScreen,\n          options: {\n            drawerLabel: 'Settings',\n            drawerLabelStyle: styles.drawerLabel\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\nconst {\n  width\n} = Dimensions.get('window');\nconst drawerWidth = Math.min(width * 0.2, 180);\nconst styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    backgroundColor: '#F5F5F5'\n  },\n  drawer: {\n    width: drawerWidth,\n    backgroundColor: '#FFFFFF',\n    borderRightWidth: 1,\n    borderRightColor: '#E0E0E0'\n  },\n  drawerLabel: {\n    fontSize: 14,\n    fontWeight: '500',\n    color: '#333333'\n  },\n  drawerItem: {\n    marginVertical: 0,\n    marginHorizontal: 0,\n    padding: 8\n  },\n  drawerContent: {\n    paddingTop: 20\n  }\n});","map":{"version":3,"names":["React","NavigationContainer","createDrawerNavigator","StyleSheet","View","Dimensions","Ionicons","GestureHandlerRootView","HomeScreen","jsxDEV","_jsxDEV","CanvasScreen","style","styles","screen","fileName","_jsxFileName","lineNumber","columnNumber","ProfileScreen","SettingsScreen","Drawer","App","flex","children","Navigator","initialRouteName","screenOptions","route","drawerStyle","drawer","drawerType","drawerPosition","headerShown","drawerIcon","focused","color","iconName","name","size","drawerItemStyle","drawerItem","drawerContentContainerStyle","drawerContent","Screen","component","options","drawerLabel","drawerLabelStyle","width","get","drawerWidth","Math","min","create","backgroundColor","borderRightWidth","borderRightColor","fontSize","fontWeight","marginVertical","marginHorizontal","padding","paddingTop"],"sources":["C:/Users/rm200523/OneDrive - Université Côte d'Azur/Documents/3annee/triprecapApp/triprecap/App.js"],"sourcesContent":["import 'react-native-gesture-handler';\r\nimport React from 'react';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createDrawerNavigator } from '@react-navigation/drawer';\r\nimport { StyleSheet, View, Dimensions } from 'react-native';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { GestureHandlerRootView } from 'react-native-gesture-handler';\r\n\r\n// Import screens from src/screens\r\nimport HomeScreen from './src/screens/HomeScreen';\r\n\r\n// Placeholder screens\r\nconst CanvasScreen = () => (\r\n  <View style={styles.screen}>\r\n    {/* Drawing/editing canvas will go here */}\r\n  </View>\r\n);\r\n\r\nconst ProfileScreen = () => (\r\n  <View style={styles.screen}>\r\n    {/* User profile content will go here */}\r\n  </View>\r\n);\r\n\r\nconst SettingsScreen = () => (\r\n  <View style={styles.screen}>\r\n    {/* App settings will go here */}\r\n  </View>\r\n);\r\n\r\nconst Drawer = createDrawerNavigator();\r\n\r\nexport default function App() {\r\n  return (\r\n    <GestureHandlerRootView style={{ flex: 1 }}>\r\n      <NavigationContainer>\r\n        <Drawer.Navigator\r\n          initialRouteName=\"Home\"\r\n          screenOptions={({ route }) => ({\r\n            drawerStyle: styles.drawer,\r\n            drawerType: 'permanent',\r\n            drawerPosition: 'left',\r\n            headerShown: false,\r\n            drawerIcon: ({ focused, color }) => {\r\n              let iconName;\r\n              if (route.name === 'Home') {\r\n                iconName = focused ? 'book' : 'book-outline';\r\n              } else if (route.name === 'Canvas') {\r\n                iconName = focused ? 'create' : 'create-outline';\r\n              } else if (route.name === 'Profile') {\r\n                iconName = focused ? 'person' : 'person-outline';\r\n              } else if (route.name === 'Settings') {\r\n                iconName = focused ? 'settings' : 'settings-outline';\r\n              }\r\n              return <Ionicons name={iconName} size={20} color={color} />;\r\n            },\r\n            drawerItemStyle: styles.drawerItem,\r\n            drawerContentContainerStyle: styles.drawerContent,\r\n          })}\r\n        >\r\n          <Drawer.Screen \r\n            name=\"Home\" \r\n            component={HomeScreen}\r\n            options={{\r\n              drawerLabel: 'Home',\r\n              drawerLabelStyle: styles.drawerLabel,\r\n            }}\r\n          />\r\n          <Drawer.Screen \r\n            name=\"Canvas\" \r\n            component={CanvasScreen}\r\n            options={{\r\n              drawerLabel: 'Canvas',\r\n              drawerLabelStyle: styles.drawerLabel,\r\n            }}\r\n          />\r\n          <Drawer.Screen \r\n            name=\"Profile\" \r\n            component={ProfileScreen}\r\n            options={{\r\n              drawerLabel: 'Profile',\r\n              drawerLabelStyle: styles.drawerLabel,\r\n            }}\r\n          />\r\n          <Drawer.Screen \r\n            name=\"Settings\" \r\n            component={SettingsScreen}\r\n            options={{\r\n              drawerLabel: 'Settings',\r\n              drawerLabelStyle: styles.drawerLabel,\r\n            }}\r\n          />\r\n        </Drawer.Navigator>\r\n      </NavigationContainer>\r\n    </GestureHandlerRootView>\r\n  );\r\n}\r\n\r\nconst { width } = Dimensions.get('window');\r\nconst drawerWidth = Math.min(width * 0.2, 180); // 20% de la largeur de l'écran, max 180px\r\n\r\nconst styles = StyleSheet.create({\r\n  screen: {\r\n    flex: 1,\r\n    backgroundColor: '#F5F5F5',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    backgroundColor: '#FFFFFF',\r\n    borderRightWidth: 1,\r\n    borderRightColor: '#E0E0E0',\r\n  },\r\n  drawerLabel: {\r\n    fontSize: 14,\r\n    fontWeight: '500',\r\n    color: '#333333',\r\n  },\r\n  drawerItem: {\r\n    marginVertical: 0,\r\n    marginHorizontal: 0,\r\n    padding: 8,\r\n  },\r\n  drawerContent: {\r\n    paddingTop: 20,\r\n  },\r\n}); "],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}