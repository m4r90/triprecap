{"ast":null,"code":"import { ContinousBaseGesture } from './gesture';\nconst _worklet_762740353467_init_data = {\n  code: \"function changeEventCalculator(current,previous){let changePayload;if(previous===undefined){changePayload={scaleChange:current.scale};}else{changePayload={scaleChange:current.scale/previous.scale};}return{...current,...changePayload};}\",\n  location: \"C:\\\\Users\\\\rm200523\\\\OneDrive - Universit\\xE9 C\\xF4te d'Azur\\\\Documents\\\\3annee\\\\triprecapApp\\\\triprecap\\\\node_modules\\\\react-native-gesture-handler\\\\lib\\\\module\\\\handlers\\\\gestures\\\\pinchGesture.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"changeEventCalculator\\\",\\\"current\\\",\\\"previous\\\",\\\"changePayload\\\",\\\"undefined\\\",\\\"scaleChange\\\",\\\"scale\\\"],\\\"sources\\\":[\\\"C:/Users/rm200523/OneDrive - Universit\\xE9 C\\xF4te d'Azur/Documents/3annee/triprecapApp/triprecap/node_modules/react-native-gesture-handler/lib/module/handlers/gestures/pinchGesture.js\\\"],\\\"mappings\\\":\\\"AAEA,SAAAA,qBAASA,CAAsBC,OAAA,CAAOC,QAAE,CAAQ,CAG9C,GAAI,CAAAC,aAAa,CAEjB,GAAID,QAAQ,GAAKE,SAAS,CAAE,CAC1BD,aAAa,CAAG,CACdE,WAAW,CAAEJ,OAAO,CAACK,KACvB,CAAC,CACH,CAAC,IAAM,CACLH,aAAa,CAAG,CACdE,WAAW,CAAEJ,OAAO,CAACK,KAAK,CAAGJ,QAAQ,CAACI,KACxC,CAAC,CACH,CAEA,MAAO,CAAE,GAAGL,OAAO,CACjB,GAAGE,aACL,CAAC,CACH\\\",\\\"ignoreList\\\":[]}\",\n  version: \"3.6.3\"\n};\nconst changeEventCalculator = function () {\n  const _e = [new global.Error(), 1, -27];\n  const changeEventCalculator = function (current, previous) {\n    let changePayload;\n    if (previous === undefined) {\n      changePayload = {\n        scaleChange: current.scale\n      };\n    } else {\n      changePayload = {\n        scaleChange: current.scale / previous.scale\n      };\n    }\n    return Object.assign({}, current, changePayload);\n  };\n  changeEventCalculator.__closure = {};\n  changeEventCalculator.__workletHash = 762740353467;\n  changeEventCalculator.__initData = _worklet_762740353467_init_data;\n  changeEventCalculator.__stackDetails = _e;\n  return changeEventCalculator;\n}();\nexport class PinchGesture extends ContinousBaseGesture {\n  constructor() {\n    super();\n    this.handlerName = 'PinchGestureHandler';\n  }\n  onChange(callback) {\n    this.handlers.changeEventCalculator = changeEventCalculator;\n    return super.onChange(callback);\n  }\n}","map":{"version":3,"names":["ContinousBaseGesture","_worklet_762740353467_init_data","code","location","sourceMap","version","changeEventCalculator","_e","global","Error","current","previous","changePayload","undefined","scaleChange","scale","Object","assign","__closure","__workletHash","__initData","__stackDetails","PinchGesture","constructor","handlerName","onChange","callback","handlers"],"sources":["C:\\Users\\rm200523\\OneDrive - Université Côte d'Azur\\Documents\\3annee\\triprecapApp\\triprecap\\node_modules\\react-native-gesture-handler\\lib\\module\\handlers\\gestures\\pinchGesture.ts"],"sourcesContent":["import { ContinousBaseGesture } from './gesture';\nimport { PinchGestureHandlerEventPayload } from '../PinchGestureHandler';\nimport { GestureUpdateEvent } from '../gestureHandlerCommon';\n\nexport type PinchGestureChangeEventPayload = {\n  scaleChange: number;\n};\n\nfunction changeEventCalculator(\n  current: GestureUpdateEvent<PinchGestureHandlerEventPayload>,\n  previous?: GestureUpdateEvent<PinchGestureHandlerEventPayload>\n) {\n  'worklet';\n  let changePayload: PinchGestureChangeEventPayload;\n  if (previous === undefined) {\n    changePayload = {\n      scaleChange: current.scale,\n    };\n  } else {\n    changePayload = {\n      scaleChange: current.scale / previous.scale,\n    };\n  }\n\n  return { ...current, ...changePayload };\n}\n\nexport class PinchGesture extends ContinousBaseGesture<\n  PinchGestureHandlerEventPayload,\n  PinchGestureChangeEventPayload\n> {\n  constructor() {\n    super();\n\n    this.handlerName = 'PinchGestureHandler';\n  }\n\n  onChange(\n    callback: (\n      event: GestureUpdateEvent<\n        PinchGestureHandlerEventPayload & PinchGestureChangeEventPayload\n      >\n    ) => void\n  ) {\n    // @ts-ignore TS being overprotective, PinchGestureHandlerEventPayload is Record\n    this.handlers.changeEventCalculator = changeEventCalculator;\n    return super.onChange(callback);\n  }\n}\n\nexport type PinchGestureType = InstanceType<typeof PinchGesture>;\n"],"mappings":"AAAA,SAASA,oBAAT,QAAqC,WAArC;AAAA,MAAAC,+BAAA;EAAAC,IAAA;EAAAC,QAAA;EAAAC,SAAA;EAAAC,OAAA;AAAA;AAAA,MAQSC,qBAAT;EAAA,MAAAC,EAAA,QAAAC,MAAA,CAAAC,KAAA;EAAA,MAAAH,qBAAA,YAAAA,CACEI,OADF,EAEEC,QAFF,EAGE;IAEA,IAAIC,aAAJ;IACA,IAAID,QAAQ,KAAKE,SAAjB,EAA4B;MAC1BD,aAAa,GAAG;QACdE,WAAW,EAAEJ,OAAO,CAACK;MADP,CAAhB;IAGD,CAJD,MAIO;MACLH,aAAa,GAAG;QACdE,WAAW,EAAEJ,OAAO,CAACK,KAAR,GAAgBJ,QAAQ,CAACI;MADxB,CAAhB;IAGD;IAED,OAAAC,MAAA,CAAAC,MAAA,KAAYP,OAAL,EAAiBE,aAAA;EACzB;EAAAN,qBAAA,CAAAY,SAAA;EAAAZ,qBAAA,CAAAa,aAAA;EAAAb,qBAAA,CAAAc,UAAA,GAAAnB,+BAAA;EAAAK,qBAAA,CAAAe,cAAA,GAAAd,EAAA;EAAA,OAAAD,qBAAA;AAAA,CAjBD;AAmBA,OAAO,MAAMgB,YAAN,SAA2BtB,oBAA3B,CAGL;EACAuB,WAAWA,CAAA,EAAG;IACZ;IAEA,KAAKC,WAAL,GAAmB,qBAAnB;EACD;EAEDC,QAAQA,CACNC,QADM,EAMN;IAEA,KAAKC,QAAL,CAAcrB,qBAAd,GAAsCA,qBAAtC;IACA,OAAO,MAAMmB,QAAN,CAAeC,QAAf,CAAP;EACD;AAjBD","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}