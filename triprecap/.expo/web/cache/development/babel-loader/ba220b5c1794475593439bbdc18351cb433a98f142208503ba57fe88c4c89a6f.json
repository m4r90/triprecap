{"ast":null,"code":"function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nimport findNodeHandle from \"react-native-web/dist/exports/findNodeHandle\";\nimport PointerEventManager from './PointerEventManager';\nimport TouchEventManager from './TouchEventManager';\nimport { State } from '../../State';\nimport { isPointerInBounds } from '../utils';\nexport class GestureHandlerWebDelegate {\n  constructor() {\n    _defineProperty(this, \"view\", void 0);\n    _defineProperty(this, \"gestureHandler\", void 0);\n    _defineProperty(this, \"eventManagers\", []);\n  }\n  getView() {\n    return this.view;\n  }\n  init(viewRef, handler) {\n    if (!viewRef) {\n      throw new Error(`Cannot find HTML Element for handler ${handler.getTag()}`);\n    }\n    this.gestureHandler = handler;\n    this.view = findNodeHandle(viewRef);\n    this.view.style['touchAction'] = 'none';\n    this.view.style['WebkitTouchCallout'] = 'none';\n    const config = handler.getConfig();\n    if (!config.userSelect) {\n      this.view.style['webkitUserSelect'] = 'none';\n      this.view.style['userSelect'] = 'none';\n    } else {\n      this.view.style['webkitUserSelect'] = config.userSelect;\n      this.view.style['userSelect'] = config.userSelect;\n    }\n    this.eventManagers.push(new PointerEventManager(this.view));\n    this.eventManagers.push(new TouchEventManager(this.view));\n    this.eventManagers.forEach(manager => this.gestureHandler.attachEventManager(manager));\n  }\n  isPointerInBounds({\n    x,\n    y\n  }) {\n    return isPointerInBounds(this.view, {\n      x,\n      y\n    });\n  }\n  measureView() {\n    const rect = this.view.getBoundingClientRect();\n    return {\n      pageX: rect.left,\n      pageY: rect.top,\n      width: rect.width,\n      height: rect.height\n    };\n  }\n  reset() {\n    this.eventManagers.forEach(manager => manager.resetManager());\n  }\n  tryResetCursor() {\n    const config = this.gestureHandler.getConfig();\n    if (config.activeCursor && config.activeCursor !== 'auto' && this.gestureHandler.getState() === State.ACTIVE) {\n      this.view.style.cursor = 'auto';\n    }\n  }\n  onBegin() {}\n  onActivate() {\n    const config = this.gestureHandler.getConfig();\n    if ((!this.view.style.cursor || this.view.style.cursor === 'auto') && config.activeCursor) {\n      this.view.style.cursor = config.activeCursor;\n    }\n  }\n  onEnd() {\n    this.tryResetCursor();\n  }\n  onCancel() {\n    this.tryResetCursor();\n  }\n  onFail() {\n    this.tryResetCursor();\n  }\n}","map":{"version":3,"names":["PointerEventManager","TouchEventManager","State","isPointerInBounds","GestureHandlerWebDelegate","constructor","_defineProperty","getView","view","init","viewRef","handler","Error","getTag","gestureHandler","findNodeHandle","style","config","getConfig","userSelect","eventManagers","push","forEach","manager","attachEventManager","x","y","measureView","rect","getBoundingClientRect","pageX","left","pageY","top","width","height","reset","resetManager","tryResetCursor","activeCursor","getState","ACTIVE","cursor","onBegin","onActivate","onEnd","onCancel","onFail"],"sources":["C:\\Users\\rm200523\\OneDrive - Université Côte d'Azur\\Documents\\3annee\\triprecapApp\\triprecap\\node_modules\\react-native-gesture-handler\\lib\\module\\web\\tools\\GestureHandlerWebDelegate.ts"],"sourcesContent":["import { findNodeHandle } from 'react-native';\nimport type GestureHandler from '../handlers/GestureHandler';\nimport {\n  GestureHandlerDelegate,\n  MeasureResult,\n} from './GestureHandlerDelegate';\nimport PointerEventManager from './PointerEventManager';\nimport TouchEventManager from './TouchEventManager';\nimport { State } from '../../State';\nimport { isPointerInBounds } from '../utils';\nimport EventManager from './EventManager';\n\nexport class GestureHandlerWebDelegate\n  implements GestureHandlerDelegate<HTMLElement>\n{\n  private view!: HTMLElement;\n  private gestureHandler!: GestureHandler;\n  private eventManagers: EventManager<unknown>[] = [];\n\n  getView(): HTMLElement {\n    return this.view;\n  }\n\n  init(viewRef: number, handler: GestureHandler): void {\n    if (!viewRef) {\n      throw new Error(\n        `Cannot find HTML Element for handler ${handler.getTag()}`\n      );\n    }\n\n    this.gestureHandler = handler;\n    this.view = findNodeHandle(viewRef) as unknown as HTMLElement;\n\n    this.view.style['touchAction'] = 'none';\n    //@ts-ignore This one disables default events on Safari\n    this.view.style['WebkitTouchCallout'] = 'none';\n\n    const config = handler.getConfig();\n\n    if (!config.userSelect) {\n      this.view.style['webkitUserSelect'] = 'none';\n      this.view.style['userSelect'] = 'none';\n    } else {\n      this.view.style['webkitUserSelect'] = config.userSelect;\n      this.view.style['userSelect'] = config.userSelect;\n    }\n\n    this.eventManagers.push(new PointerEventManager(this.view));\n    this.eventManagers.push(new TouchEventManager(this.view));\n\n    this.eventManagers.forEach((manager) =>\n      this.gestureHandler.attachEventManager(manager)\n    );\n  }\n\n  isPointerInBounds({ x, y }: { x: number; y: number }): boolean {\n    return isPointerInBounds(this.view, { x, y });\n  }\n\n  measureView(): MeasureResult {\n    const rect = this.view.getBoundingClientRect();\n\n    return {\n      pageX: rect.left,\n      pageY: rect.top,\n      width: rect.width,\n      height: rect.height,\n    };\n  }\n\n  reset(): void {\n    this.eventManagers.forEach((manager: EventManager<unknown>) =>\n      manager.resetManager()\n    );\n  }\n\n  tryResetCursor() {\n    const config = this.gestureHandler.getConfig();\n\n    if (\n      config.activeCursor &&\n      config.activeCursor !== 'auto' &&\n      this.gestureHandler.getState() === State.ACTIVE\n    ) {\n      this.view.style.cursor = 'auto';\n    }\n  }\n\n  onBegin(): void {\n    // no-op for now\n  }\n\n  onActivate(): void {\n    const config = this.gestureHandler.getConfig();\n\n    if (\n      (!this.view.style.cursor || this.view.style.cursor === 'auto') &&\n      config.activeCursor\n    ) {\n      this.view.style.cursor = config.activeCursor;\n    }\n  }\n\n  onEnd(): void {\n    this.tryResetCursor();\n  }\n\n  onCancel(): void {\n    this.tryResetCursor();\n  }\n\n  onFail(): void {\n    this.tryResetCursor();\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}